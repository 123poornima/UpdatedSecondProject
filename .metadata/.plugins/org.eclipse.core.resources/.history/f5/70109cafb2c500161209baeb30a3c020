package com.niit.backend.configuration;
import java.util.Properties;

import javax.sql.DataSource;


import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.jdbc.datasource.DriverManagerDataSource;

import org.springframework.transaction.annotation.EnableTransactionManagement;

import com.niit.backend.model.User;



@Configuration
@ComponentScan("com.niit")
@EnableTransactionManagement
public class ApplicationContext 
{
	@Bean(name="dataSource")
	public DataSource getDataSource()
	{
		DriverManagerDataSource dataSource=new DriverManagerDataSource();
		dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
		dataSource.setUrl("jdbc:oracle:thin:@localhost:1521:XE");
		dataSource.setUsername("system");
		dataSource.setPassword("system");
		 Properties connectionProperties = new Properties();
		    connectionProperties.setProperty("hibernate.hbm2ddl.auto","update");
		    connectionProperties.setProperty("hibernate.show_sql", "true");
		    connectionProperties.setProperty("hibernte.dialect", "org.hibernate.dialect.Oracle10gDialect");
		    connectionProperties.setProperty("hiberanate.formate_sql", "true");
		    connectionProperties.setProperty("hibernate.jdbc.use_get_generated_keys", "true");
		    //connectionProperties.setProperty("hibernate.default_schema", "system"); 		
		    dataSource.setConnectionProperties(connectionProperties);  
		 
		return dataSource;

 }
	private Properties getHibernateProperties()
	{
		Properties properties =new Properties();
		properties.put("hibernate.show_sql","true");
		properties.put("hibernate.dialect","org.hibernate.dialect.Oracle10gDialect");
		properties.put("hibernate.hbm2ddl.auto","update");
		
		return properties;
 }
	//create an object with reference to constructors
	@Autowired
	@Bean(name="sessionFactory")
	public SessionFactory getSessionFactory(DataSource dataSource)
	{
		LocalSessionFactoryBuilder sessionBuilder=new LocalSessionFactoryBuilder(dataSource);
		sessionBuilder.addProperties(getHibernateProperties());
	    sessionBuilder.addAnnotatedClass(User.class);
	  

		//sessionBuilder.addAnnotatedClass(UserDetails.class);
		System.out.println("database connected");
		return sessionBuilder.buildSessionFactory();
	}
	@Autowired
	@Bean(name="transactionManager")
	public HibernateTransactionManager getTransactionManager(SessionFactory sessionfactory)
	{
		HibernateTransactionManager transactionManager = new HibernateTransactionManager (sessionfactory);
		System.out.println("Transaction...");
		return transactionManager;
	}
}
